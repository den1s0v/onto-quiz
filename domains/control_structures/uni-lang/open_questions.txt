/* Вопросы с открытым ответом "введите объяснение" на :
    Ошибочную трассу - "почему это неправильно?"
    Правильную трассу - "почему эта строка следующая?"
*/

# 1. "Почему это неправильно?"

# алгоритм № 1

функция main
{
	если усл_1 разв_1
	{
		ждать
	}
	иначе если усл_2 
	{
		бежать
	}
	иначе
	{
		лежать
	}
}


# трасса № 1.1  -  ни одна ветка не выполнилась

началась программа
началась функция main
    началось разв_1
		выполнилось усл_1 - ложь
		выполнилось усл_2 - ложь
	закончилась разв_1  // эта строка
закончилась функция main
закончилась программа


# трасса № 1.2  -  выполнилось две ветки (1 и 2)

началась программа
началась функция main
    началось разв_1
		выполнилось усл_1 - истина
		началась ветка 1 разв_1
			выполнилось ждать
		закончилась ветка 1 разв_1
		выполнилось усл_2 - истина  // эта строка
		началась ветка 2 разв_1
			выполнилось бежать
		закончилась ветка 2 разв_1
   	закончилась разв_1
закончилась функция main
закончилась программа


# трасса № 1.3  -  выполнилось две ветки (1 и 3)

началась программа
началась функция main
    началось разв_1
		выполнилось усл_1 - истина
		началась ветка 1 разв_1
			выполнилось ждать
		закончилась ветка 1 разв_1
		выполнилось усл_2 - ложь  // эта строка
		началась ветка 3 разв_1
			выполнилось лежать
		закончилась ветка 3 разв_1
	закончилась разв_1
закончилась функция main
закончилась программа


# трасса № 1.4  -  выполнилась не та ветка (вторая при истинном усл_1)

началась программа
началась функция main
    началось разв_1
		выполнилось усл_1 - истина
		началась ветка 2 разв_1  // эта строка
			выполнилось бежать
		закончилась ветка 2 разв_1
	закончилась разв_1
закончилась функция main
закончилась программа


# трасса № 1.5  -  указана не та ветка (но действие из правильной ветки)

началась программа
началась функция main
    началось разв_1
		выполнилось усл_1 - истина
		началась ветка 2 разв_1  // эта строка
			выполнилось ждать
		закончилась ветка 2 разв_1
	закончилась разв_1
закончилась функция main
закончилась программа






# 2. "Почему эта строка следующая?"

# алгоритм № 1

функция main
{
	если усл_1 разв_1
	{
		ждать
	}
	иначе если усл_2 
	{
		бежать
	}
	иначе
	{
		лежать
	}
}


# Правильная трасса

началась программа
началась функция main
	началась разв_1
		выполнилось усл_1 - ложь
		выполнилось усл_2 - истина		# <- спросить про эту строку
		началась ветка 2 разв_1		# <- спросить про эту строку
			выполнилось бежать		# <- спросить про эту строку
		закончилась ветка 2 разв_1
	закончилась разв_1		# <- спросить про эту строку
закончилась функция main		# <- спросить про эту строку
закончилась программа


# Полный набор правил - охватить
# Сгруппировать по лекциям:
	1 - развилки без циклов
	2 - с циклами (break, continue = "прервать цикл ", "перейти к следующей итерации")

# Сгруппировать по категориям:
- следования
- развилки
...
- комбинации

Мне нет смысла:
 - тренировочные
 - контрольные



/*
Поиск статей: scopus, web of science
- computer science
- педагогика  (обучение программированию)

1-2 источника - на актуальность
10-12% - самоцитирование
остальные - по теме!
*/






/*




# Трасса

началась программа
началась функция main
	выполнилось А
	начался цикл для_1
		выполнилось инициализация цикла для_1 *
		выполнилось условие цикла для_1 - истина
		началась итерация 1 цикла для_1
			выполнилось Б 1 раз
		закончилась итерация 1 цикла для_1
		выполнился переход цикла для_1 *
		выполнилось условие цикла для_1 - истина
		началась итерация 2 цикла для_1
			выполнилось Б 2 раз
		закончилась итерация 2 цикла для_1
		выполнился переход цикла для_1 *
		выполнилось условие цикла для_1 - ложь
	закончился цикл для_1
	началось разв_1
		выполнилось усл_1 - ложь
		выполнилось усл_2 - истина
		началась ветка 2 разв_1
			выполнилось Ц2
		закончилась ветка 2 разв_1
	закончилась разв_1
закончилась функция main
закончилась программа

# комментарий
# * могут опускаться, если не содержат функций
# выполнилась = началась .. закончилась

# Алгоритм к Трассе

функция main
{
	А
	цикл для_1
	{
		Б
	}
	если усл_1 разв_1
	{
		Ц1
	}
	иначе если усл_2 
	{
		Ц2
	}
	иначе
	{
		Ц3
	}

}


=============================
=============================
=============================
=============================


# алгоритм

функция ф_1 {
    действие_1; 
    цикл для_1 {
        действие_2;
        цикл для_2 {
            действие_3;
        }
        действие_4;
    }
    действие_5;
}

# трасса

началась программа
началась функция ф_1
    выполнилось действие_1
    начался цикл для_1
        выполнилось инициализация цикла для_1 *
        выполнилось условие цикла для_1 - истина
            началась итерация 1 цикла для_1

                выполнилось действие_2

                начался цикл для_2
                    выполнилась инициализация цикла для_2 *
                    выполнилось условие цикла для_2 - истина
                        началась итерация 1 цикла для_2
                            выполнилось действие_3
                        закончилась итерация 1 для цикла для_2
                    выполнился переход цикла для_2 *
                    выполнилось условие цикла для_2 - истина
                        началась итерация 2 цикла для_2
                            выполнилось действие_3
                        закончилась итерация 2 для цикла для_2
                    выполнился переход цикла для_2 *
                    выполнилось условие цикла для_2 - ложь
                закончился цикл для_2

                выполнилось действие_4

            закончилась итерация 1 цикла для_1
        выполнился переход цикла для_1 *
        выполнилось условие цикла для_1 - истина
            началась итерация 2 цикла для_1

                выполнилось действие_2

                начался цикл для_2
                    выполнилась инициализация цикла для_2 *
                    выполнилось условие цикла для_2 - истина
                        началась итерация 1 цикла для_2
                            выполнилось действие_3
                        закончилась итерация 1 для цикла для_2
                    выполнился переход цикла для_2 *
                    выполнилось условие цикла для_2 - истина
                        началась итерация 2 цикла для_2
                            выполнилось действие_3
                        закончилась итерация 2 для цикла для_2
                    выполнился переход цикла для_2 *
                    выполнилось условие цикла для_2 - ложь
                закончился цикл для_2

                выполнилось действие_4

            закончилась итерация 2 цикла для_1
        выполнился переход цикла для_1 *
        выполнилось условие цикла для_1 - ложь
    закончился цикл для_1

    выполнилось действие_5

закончилась функция ф_1
закончилась программа

# алгоритм - нумерация с операторов с вложениями

функция ф_1 {
    действие_1.1; 
    цикл для_1.2 {
        действие_1.2.1;
        цикл_1.2.2 {
            действие_1.2.2.1;
        }
        действие_1.2.2;
    }
    действие_1.2;
}


# алгоритм - нумерация с операторов сквозная

функция ф_1 {
    действие_2; 
    цикл для_3 {
        действие_4;
        цикл_5 {
            действие_6;
        }
        действие_7;
    }
    действие_8;
}

# алгоритм 
# действия - глаголы
# условия - прилагательные
# циклы - наречия

функция ф_1 {
    летать(); 
    цикл_быстро {
        бежать();
        цикл_медленно {
            смотреть();
        }
        вставать();
    }
    спать();
}


# алгоритм 
# действия - техника
# условия - растения
# циклы - животные
# переменные - мебель

функция ф_1 {
    вертолёт(); 
    цикл_змея {
        поезд();
        цикл_волк {
            самолёт();
        }
        автомобиль();
    }
    велосипед();
}

функция ф_1 {
    инициализация стул = 10;
    вертолёт(); 
    цикл_змея(для кровать от 1 до стул) {
        поезд();
        цикл_волк(для дивана от 1 до кровать) {
            самолёт();
        }
        автомобиль();
    }
    велосипед();
}

# Алгоритм - случайные фразы
# источник - https://randomall.ru/custom/gen/272/

функция Провал_дипломатии {
    Записки_врача();
    цикл_Крепость_на_холме {
        Гарантия_безопасности();
        цикл_Совесть_ростовщика {
            Шёпот_меди();
        }
        Внезапная_смерть();
    }
    Песня_о_мечте();
}

*/